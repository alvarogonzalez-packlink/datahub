"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[52295],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var s=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,s,o=function(e,n){if(null==e)return{};var t,s,o={},r=Object.keys(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=s.createContext({}),u=function(e){var n=s.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return s.createElement(l.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},m=s.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||r;return t?s.createElement(g,a(a({ref:n},c),{},{components:t})):s.createElement(g,a({ref:n},c))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[d]="string"==typeof e?e:o,a[1]=i;for(var u=2;u<r;u++)a[u]=t[u];return s.createElement.apply(null,a)}return s.createElement.apply(null,t)}m.displayName="MDXCreateElement"},18679:(e,n,t)=>{t.d(n,{Z:()=>a});var s=t(67294),o=t(86010);const r={tabItem:"tabItem_Ymn6"};function a(e){let{children:n,hidden:t,className:a}=e;return s.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,a),hidden:t},n)}},73992:(e,n,t)=>{t.d(n,{Z:()=>w});var s=t(87462),o=t(67294),r=t(86010),a=t(72957),i=t(16550),l=t(75238),u=t(33609),c=t(92560);function d(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:o}}=e;return{value:n,label:t,attributes:s,default:o}}))}function p(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const s=(0,i.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(r),(0,o.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=p(e),[a,i]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[l,u]=g({queryString:t,groupId:s}),[d,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,c.Nk)(t);return[s,(0,o.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),h=(()=>{const e=l??d;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:a,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var h=t(51048);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:n,block:t,selectedValue:i,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.o5)(),p=e=>{const n=e.currentTarget,t=c.indexOf(n),s=u[t].value;s!==i&&(d(n),l(s))},m=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n)},u.map((e=>{let{value:n,label:t,attributes:a}=e;return o.createElement("li",(0,s.Z)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>c.push(e),onKeyDown:m,onClick:p},a,{className:(0,r.Z)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":i===n})}),t??n)})))}function k(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==s}))))}function v(e){const n=f(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",b.tabList)},o.createElement(y,(0,s.Z)({},e,n)),o.createElement(k,(0,s.Z)({},e,n)))}function w(e){const n=(0,h.Z)();return o.createElement(v,(0,s.Z)({key:String(n)},e))}},2132:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var s=t(87462),o=(t(67294),t(3905)),r=t(73992),a=t(18679);const i={sidebar_position:4,title:"Business Glossary",slug:"/generated/ingestion/sources/business-glossary",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/business-glossary.md"},l="Business Glossary",u={unversionedId:"docs/generated/ingestion/sources/business-glossary",id:"version-0.12.1/docs/generated/ingestion/sources/business-glossary",title:"Business Glossary",description:"Certified",source:"@site/versioned_docs/version-0.12.1/docs/generated/ingestion/sources/business-glossary.md",sourceDirName:"docs/generated/ingestion/sources",slug:"/generated/ingestion/sources/business-glossary",permalink:"/docs/0.12.1/generated/ingestion/sources/business-glossary",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/business-glossary.md",tags:[],version:"0.12.1",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Business Glossary",slug:"/generated/ingestion/sources/business-glossary",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/business-glossary.md"},sidebar:"overviewSidebar",previous:{title:"BigQuery",permalink:"/docs/0.12.1/generated/ingestion/sources/bigquery"},next:{title:"ClickHouse",permalink:"/docs/0.12.1/generated/ingestion/sources/clickhouse"}},c={},d=[{value:"CLI based Ingestion",id:"cli-based-ingestion",level:3},{value:"Install the Plugin",id:"install-the-plugin",level:4},{value:"Starter Recipe",id:"starter-recipe",level:3},{value:"Config Details",id:"config-details",level:3},{value:"Business Glossary File Format",id:"business-glossary-file-format",level:3},{value:"Generating custom IDs for your terms",id:"generating-custom-ids-for-your-terms",level:2},{value:"Compatibility",id:"compatibility",level:2},{value:"Code Coordinates",id:"code-coordinates",level:3}],p={toc:d},m="wrapper";function g(e){let{components:n,...t}=e;return(0,o.kt)(m,(0,s.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"business-glossary"},"Business Glossary"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-certified-brightgreen",alt:"Certified"})),(0,o.kt)("p",null,"This plugin pulls business glossary metadata from a yaml-formatted file. An example of one such file is located in the examples directory ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/examples/bootstrap_data/business_glossary.yml"},"here"),"."),(0,o.kt)("h3",{id:"cli-based-ingestion"},"CLI based Ingestion"),(0,o.kt)("h4",{id:"install-the-plugin"},"Install the Plugin"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"pip install 'acryl-datahub[datahub-business-glossary]'\n")),(0,o.kt)("h3",{id:"starter-recipe"},"Starter Recipe"),(0,o.kt)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,o.kt)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,o.kt)("p",null,"For general pointers on writing and running a recipe, see our ",(0,o.kt)("a",{parentName:"p",href:"/docs/0.12.1/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"source:\n  type: datahub-business-glossary\n  config:\n    # Coordinates\n    file: /path/to/business_glossary_yaml\n    enable_auto_id: true # recommended to set to true so datahub will auto-generate guids from your term names\n\n# sink configs if needed\n\n")),(0,o.kt)("h3",{id:"config-details"},"Config Details"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(a.Z,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,o.kt)("p",null,"Note that a ",(0,o.kt)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,o.kt)("div",{className:"config-table"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("div",{className:"path-line"},(0,o.kt)("span",{className:"path-main"},"file"),"\xa0",(0,o.kt)("abbr",{title:"Required"},"\u2705"))," ",(0,o.kt)("div",{className:"type-name-line"},(0,o.kt)("span",{className:"type-name"},"One of string, string(path)"))),(0,o.kt)("td",{parentName:"tr",align:"left"},"File path or URL to business glossary file to ingest.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("div",{className:"path-line"},(0,o.kt)("span",{className:"path-main"},"enable_auto_id"))," ",(0,o.kt)("div",{className:"type-name-line"},(0,o.kt)("span",{className:"type-name"},"boolean"))),(0,o.kt)("td",{parentName:"tr",align:"left"},"Generate guid urns instead of a plaintext path urn with the node/term's hierarchy. ",(0,o.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,o.kt)("span",{className:"default-value"},"False")))))))),(0,o.kt)(a.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "title": "BusinessGlossarySourceConfig",\n  "type": "object",\n  "properties": {\n    "file": {\n      "title": "File",\n      "description": "File path or URL to business glossary file to ingest.",\n      "anyOf": [\n        {\n          "type": "string"\n        },\n        {\n          "type": "string",\n          "format": "path"\n        }\n      ]\n    },\n    "enable_auto_id": {\n      "title": "Enable Auto Id",\n      "description": "Generate guid urns instead of a plaintext path urn with the node/term\'s hierarchy.",\n      "default": false,\n      "type": "boolean"\n    }\n  },\n  "required": [\n    "file"\n  ],\n  "additionalProperties": false\n}\n')))),(0,o.kt)("h3",{id:"business-glossary-file-format"},"Business Glossary File Format"),(0,o.kt)("p",null,"The business glossary source file should be a .yml file with the following top-level keys:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Glossary"),": the top level keys of the business glossary file"),(0,o.kt)("p",null,"Example ",(0,o.kt)("strong",{parentName:"p"},"Glossary"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: 1                                              # the version of business glossary file config the config conforms to. Currently the only version released is `1`.\nsource: DataHub                                         # the source format of the terms. Currently only supports `DataHub`\nowners:                                                 # owners contains two nested fields\n  users:                                                # (optional) a list of user IDs\n    - njones\n  groups:                                               # (optional) a list of group IDs\n    - logistics\nurl: "https://github.com/datahub-project/datahub/"      # (optional) external url pointing to where the glossary is defined externally, if applicable\nnodes:                                                  # list of child **GlossaryNode** objects. See **GlossaryNode** section below\n    ...\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"GlossaryNode"),": a container of ",(0,o.kt)("strong",{parentName:"p"},"GlossaryNode")," and ",(0,o.kt)("strong",{parentName:"p"},"GlossaryTerm")," objects"),(0,o.kt)("p",null,"Example ",(0,o.kt)("strong",{parentName:"p"},"GlossaryNode"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'- name: Shipping                                                # name of the node\n  description: Provides terms related to the shipping domain    # description of the node\n  owners:                                                       # (optional) owners contains 2 nested fields\n    users:                                                      # (optional) a list of user IDs\n      - njones\n    groups:                                                     # (optional) a  list of group IDs\n      - logistics\n  nodes:                                                        # list of child **GlossaryNode** objects\n    ...\n  knowledge_links:                                              # (optional) list of **KnowledgeCard** objects\n    - label: Wiki link for shipping\n      url: "https://en.wikipedia.org/wiki/Freight_transport"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"GlossaryTerm"),": a term in your business glossary"),(0,o.kt)("p",null,"Example ",(0,o.kt)("strong",{parentName:"p"},"GlossaryTerm"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'- name: FullAddress                                                          # name of the term\n  description: A collection of information to give the location of a building or plot of land.    # description of the term\n  owners:                                                                   # (optional) owners contains 2 nested fields\n    users:                                                                  # (optional) a list of user IDs\n      - njones\n    groups:                                                                 # (optional) a  list of group IDs\n      - logistics\n  term_source: "EXTERNAL"                                                   # one of `EXTERNAL` or `INTERNAL`. Whether the term is coming from an external glossary or one defined in your organization.\n  source_ref: FIBO                                                          # (optional) if external, what is the name of the source the glossary term is coming from?\n  source_url: "https://www.google.com"                                      # (optional) if external, what is the url of the source definition?\n  inherits:                                                                 # (optional) list of **GlossaryTerm** that this term inherits from\n    -  Privacy.PII\n  contains:                                                                 # (optional) a list of **GlossaryTerm** that this term contains\n    - Shipping.ZipCode\n    - Shipping.CountryCode\n    - Shipping.StreetAddress\n  custom_properties:                                                        # (optional) a map of key/value pairs of arbitrary custom properties\n    - is_used_for_compliance_tracking: true\n  knowledge_links:                                                          # (optional) a list of **KnowledgeCard** related to this term. These appear as links on the glossary node\'s page\n    - url: "https://en.wikipedia.org/wiki/Address"\n      label: Wiki link\n  domain: "urn:li:domain:Logistics"                                            # (optional) domain name or domain urn\n')),(0,o.kt)("p",null,"To see how these all work together, check out this comprehensive example business glossary file below:"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Example business glossary file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: 1\nsource: DataHub\nowners:\n  users:\n    - mjames\nurl: "https://github.com/datahub-project/datahub/"\nnodes:\n  - name: Classification\n    description: A set of terms related to Data Classification\n    knowledge_links:\n      - label: Wiki link for classification\n        url: "https://en.wikipedia.org/wiki/Classification"\n    terms:\n      - name: Sensitive\n        description: Sensitive Data\n        custom_properties:\n          is_confidential: false\n      - name: Confidential\n        description: Confidential Data\n        custom_properties:\n          is_confidential: true\n      - name: HighlyConfidential\n        description: Highly Confidential Data\n        custom_properties:\n          is_confidential: true\n        domain: Marketing\n  - name: PersonalInformation\n    description: All terms related to personal information\n    owners:\n      users:\n        - mjames\n    terms:\n      - name: Email\n        ## An example of using an id to pin a term to a specific guid\n        ## See "how to generate custom IDs for your terms" section below\n        # id: "urn:li:glossaryTerm:41516e310acbfd9076fffc2c98d2d1a3"\n        description: An individual\'s email address\n        inherits:\n          - Classification.Confidential\n        owners:\n          groups:\n            - Trust and Safety\n      - name: Address\n        description: A physical address\n      - name: Gender\n        description: The gender identity of the individual\n        inherits:\n          - Classification.Sensitive\n  - name: Shipping\n    description: Provides terms related to the shipping domain\n    owners:\n      users:\n        - njones\n      groups:\n        - logistics\n    terms:\n      - name: FullAddress\n        description: A collection of information to give the location of a building or plot of land.\n        owners:\n          users:\n            - njones\n          groups:\n            - logistics\n        term_source: "EXTERNAL"\n        source_ref: FIBO\n        source_url: "https://www.google.com"\n        inherits:\n          - Privacy.PII\n        contains:\n          - Shipping.ZipCode\n          - Shipping.CountryCode\n          - Shipping.StreetAddress\n        related_terms:\n          - Housing.Kitchen.Cutlery\n        custom_properties:\n          - is_used_for_compliance_tracking: true\n        knowledge_links:\n          - url: "https://en.wikipedia.org/wiki/Address"\n            label: Wiki link\n        domain: "urn:li:domain:Logistics"\n    knowledge_links:\n      - label: Wiki link for shipping\n        url: "https://en.wikipedia.org/wiki/Freight_transport"\n  - name: ClientsAndAccounts\n    description: Provides basic concepts such as account, account holder, account provider, relationship manager that are commonly used by financial services providers to describe customers and to determine counterparty identities\n    owners:\n      groups:\n        - finance\n    terms:\n      - name: Account\n        description: Container for records associated with a business arrangement for regular transactions and services\n        term_source: "EXTERNAL"\n        source_ref: FIBO\n        source_url: "https://spec.edmcouncil.org/fibo/ontology/FBC/ProductsAndServices/ClientsAndAccounts/Account"\n        inherits:\n          - Classification.HighlyConfidential\n        contains:\n          - ClientsAndAccounts.Balance\n      - name: Balance\n        description: Amount of money available or owed\n        term_source: "EXTERNAL"\n        source_ref: FIBO\n        source_url: "https://spec.edmcouncil.org/fibo/ontology/FBC/ProductsAndServices/ClientsAndAccounts/Balance"\n  - name: Housing\n    description: Provides terms related to the housing domain\n    owners:\n      users:\n        - mjames\n      groups:\n        - interior\n    nodes:\n      - name: Colors\n        description: "Colors that are used in Housing construction"\n        terms:\n          - name: Red\n            description: "red color"\n            term_source: "EXTERNAL"\n            source_ref: FIBO\n            source_url: "https://spec.edmcouncil.org/fibo/ontology/FBC/ProductsAndServices/ClientsAndAccounts/Account"\n\n          - name: Green\n            description: "green color"\n            term_source: "EXTERNAL"\n            source_ref: FIBO\n            source_url: "https://spec.edmcouncil.org/fibo/ontology/FBC/ProductsAndServices/ClientsAndAccounts/Account"\n\n          - name: Pink\n            description: pink color\n            term_source: "EXTERNAL"\n            source_ref: FIBO\n            source_url: "https://spec.edmcouncil.org/fibo/ontology/FBC/ProductsAndServices/ClientsAndAccounts/Account"\n    terms:\n      - name: WindowColor\n        description: Supported window colors\n        term_source: "EXTERNAL"\n        source_ref: FIBO\n        source_url: "https://spec.edmcouncil.org/fibo/ontology/FBC/ProductsAndServices/ClientsAndAccounts/Account"\n        values:\n          - Housing.Colors.Red\n          - Housing.Colors.Pink\n\n      - name: Kitchen\n        description: a room or area where food is prepared and cooked.\n        term_source: "EXTERNAL"\n        source_ref: FIBO\n        source_url: "https://spec.edmcouncil.org/fibo/ontology/FBC/ProductsAndServices/ClientsAndAccounts/Account"\n\n      - name: Spoon\n        description: an implement consisting of a small, shallow oval or round bowl on a long handle, used for eating, stirring, and serving food.\n        term_source: "EXTERNAL"\n        source_ref: FIBO\n        source_url: "https://spec.edmcouncil.org/fibo/ontology/FBC/ProductsAndServices/ClientsAndAccounts/Account"\n        related_terms:\n          - Housing.Kitchen\n        knowledge_links:\n          - url: "https://en.wikipedia.org/wiki/Spoon"\n            label: Wiki link\n'))),(0,o.kt)("p",null,"Source file linked ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/examples/bootstrap_data/business_glossary.yml"},"here"),"."),(0,o.kt)("h2",{id:"generating-custom-ids-for-your-terms"},"Generating custom IDs for your terms"),(0,o.kt)("p",null,"IDs are normally inferred from the glossary term/node's name, see the ",(0,o.kt)("inlineCode",{parentName:"p"},"enable_auto_id")," config. But, if you need a stable\nidentifier, you can generate a custom ID for your term. It should be unique across the entire Glossary."),(0,o.kt)("p",null,"Here's an example ID:\n",(0,o.kt)("inlineCode",{parentName:"p"},'id: "urn:li:glossaryTerm:41516e310acbfd9076fffc2c98d2d1a3"')),(0,o.kt)("p",null,"A note of caution: once you select a custom ID, it cannot be easily changed."),(0,o.kt)("h2",{id:"compatibility"},"Compatibility"),(0,o.kt)("p",null,"Compatible with version 1 of business glossary format.\nThe source will be evolved as we publish newer versions of this format."),(0,o.kt)("h3",{id:"code-coordinates"},"Code Coordinates"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Class Name: ",(0,o.kt)("inlineCode",{parentName:"li"},"datahub.ingestion.source.metadata.business_glossary.BusinessGlossaryFileSource")),(0,o.kt)("li",{parentName:"ul"},"Browse on ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/metadata/business_glossary.py"},"GitHub"))),(0,o.kt)("h2",null,"Questions"),(0,o.kt)("p",null,"If you've got any questions on configuring ingestion for Business Glossary, feel free to ping us on ",(0,o.kt)("a",{parentName:"p",href:"https://slack.datahubproject.io"},"our Slack"),"."))}g.isMDXComponent=!0}}]);