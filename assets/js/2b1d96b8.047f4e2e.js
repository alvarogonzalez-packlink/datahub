"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[86245],{67003:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>m,default:()=>N,frontMatter:()=>p,metadata:()=>d,toc:()=>f});a(67294);var n=a(3905),i=a(51715),s=a(7626);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}const p={sidebar_position:15,title:"DynamoDB",slug:"/generated/ingestion/sources/dynamodb",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/dynamodb.md"},m="DynamoDB",d={unversionedId:"docs/generated/ingestion/sources/dynamodb",id:"docs/generated/ingestion/sources/dynamodb",title:"DynamoDB",description:"Testing",source:"@site/genDocs/docs/generated/ingestion/sources/dynamodb.md",sourceDirName:"docs/generated/ingestion/sources",slug:"/generated/ingestion/sources/dynamodb",permalink:"/docs/next/generated/ingestion/sources/dynamodb",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/dynamodb.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15,title:"DynamoDB",slug:"/generated/ingestion/sources/dynamodb",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/dynamodb.md"},sidebar:"overviewSidebar",previous:{title:"Druid",permalink:"/docs/next/generated/ingestion/sources/druid"},next:{title:"Elasticsearch",permalink:"/docs/next/generated/ingestion/sources/elasticsearch"}},c={},f=[{value:"Important Capabilities",id:"important-capabilities",level:3},{value:"Prerequisities",id:"prerequisities",level:3},{value:"CLI based Ingestion",id:"cli-based-ingestion",level:3},{value:"Install the Plugin",id:"install-the-plugin",level:4},{value:"Starter Recipe",id:"starter-recipe",level:3},{value:"Config Details",id:"config-details",level:3},{value:"Advanced Configurations",id:"advanced-configurations",level:2},{value:"Using <code>include_table_item</code> config",id:"using-include_table_item-config",level:3},{value:"Code Coordinates",id:"code-coordinates",level:3}],u={toc:f},k="wrapper";function N(e){var{components:t}=e,a=o(e,["components"]);return(0,n.kt)(k,r(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},n=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),n.forEach((function(t){l(e,t,a[t])}))}return e}({},u,a),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"dynamodb"},"DynamoDB"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-testing-lightgrey",alt:"Testing"})),(0,n.kt)("h3",{id:"important-capabilities"},"Important Capabilities"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Capability"),(0,n.kt)("th",{parentName:"tr",align:null},"Status"),(0,n.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/next/metadata-ingestion/docs/dev_guides/stateful#stale-entity-removal"},"Detect Deleted Entities")),(0,n.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,n.kt)("td",{parentName:"tr",align:null},"Optionally enabled via ",(0,n.kt)("inlineCode",{parentName:"td"},"stateful_ingestion.remove_stale_metadata"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/next/platform-instances"},"Platform Instance")),(0,n.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,n.kt)("td",{parentName:"tr",align:null},"By default, platform_instance will use the AWS account id")))),(0,n.kt)("p",null,"This plugin extracts the following:"),(0,n.kt)("p",null,"AWS DynamoDB table names with their region, and infer schema of attribute names and types by scanning\nthe table"),(0,n.kt)("h3",{id:"prerequisities"},"Prerequisities"),(0,n.kt)("p",null,"In order to execute this source, you need to attach the ",(0,n.kt)("inlineCode",{parentName:"p"},"AmazonDynamoDBReadOnlyAccess")," policy to a user in your AWS account. Then create an API access key and secret for the user."),(0,n.kt)("p",null,"For a user to be able to create API access key, it needs the following access key permissions. Your AWS account admin can create a policy with these permissions and attach to the user, you can find more details in ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html"},"Managing access keys for IAM users")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Sid": "VisualEditor0",\n      "Effect": "Allow",\n      "Action": [\n        "iam:ListAccessKeys",\n        "iam:CreateAccessKey",\n        "iam:UpdateAccessKey",\n        "iam:DeleteAccessKey"\n      ],\n      "Resource": "arn:aws:iam::${aws_account_id}:user/${aws:username}"\n    }\n  ]\n}\n')),(0,n.kt)("h3",{id:"cli-based-ingestion"},"CLI based Ingestion"),(0,n.kt)("h4",{id:"install-the-plugin"},"Install the Plugin"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"pip install 'acryl-datahub[dynamodb]'\n")),(0,n.kt)("h3",{id:"starter-recipe"},"Starter Recipe"),(0,n.kt)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,n.kt)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,n.kt)("p",null,"For general pointers on writing and running a recipe, see our ",(0,n.kt)("a",{parentName:"p",href:"/docs/next/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'source:\n  type: dynamodb\n  config:\n    platform_instance: "AWS_ACCOUNT_ID"\n    aws_access_key_id: "${AWS_ACCESS_KEY_ID}"\n    aws_secret_access_key: "${AWS_SECRET_ACCESS_KEY}"\n    #\n    # If there are items that have most representative fields of the table, users could use the\n    # `include_table_item` option to provide a list of primary keys of the table in dynamodb format.\n    # For each `region.table`, the list of primary keys can be at most 100.\n    # We include these items in addition to the first 100 items in the table when we scan it.\n    #\n    # include_table_item:\n    #   region.table_name:\n    #     [\n    #       {\n    #         "partition_key_name": { "attribute_type": "attribute_value" },\n    #         "sort_key_name": { "attribute_type": "attribute_value" },\n    #       },\n    #     ]\n\nsink:\n  # sink configs\n\n')),(0,n.kt)("h3",{id:"config-details"},"Config Details"),(0,n.kt)(i.Z,{mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,n.kt)("p",null,"Note that a ",(0,n.kt)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,n.kt)("div",{className:"config-table"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-main"},"aws_access_key_id"),"\xa0",(0,n.kt)("abbr",{title:"Required"},"\u2705"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"AWS Access Key ID.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-main"},"aws_secret_access_key"),"\xa0",(0,n.kt)("abbr",{title:"Required"},"\u2705"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string(password)"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"AWS Secret Key.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-main"},"platform_instance"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The instance of the platform that all assets produced by this recipe belong to")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-main"},"env"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The environment that all assets produced by this connector belong to ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"PROD")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-main"},"classification"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"ClassificationConfig"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"For details, refer ",(0,n.kt)("a",{parentName:"td",href:"/docs/next/metadata-ingestion/docs/dev_guides/classification"},"Classification"),". ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"{","'","enabled","'",": False, ","'","sample","_","size","'",": 100, ","'","max","_","worker...")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification."),(0,n.kt)("span",{className:"path-main"},"enabled"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"boolean"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether classification should be used to auto-detect glossary terms ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"False")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification."),(0,n.kt)("span",{className:"path-main"},"info_type_to_term"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"map(str,string)"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification."),(0,n.kt)("span",{className:"path-main"},"max_workers"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"integer"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of worker threads to use for classification. Set to 1 to disable. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"4")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification."),(0,n.kt)("span",{className:"path-main"},"sample_size"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"integer"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of sample values used for classification. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"100")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification."),(0,n.kt)("span",{className:"path-main"},"classifiers"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"array"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Classifiers to use to auto-detect glossary terms. If more than one classifier, infotype predictions from the classifier defined later in sequence take precedance. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"[","{","'","type","'",": ","'","datahub","'",", ","'","config","'",": None","}","]")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.classifiers."),(0,n.kt)("span",{className:"path-main"},"DynamicTypedClassifierConfig"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"DynamicTypedClassifierConfig"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.classifiers.DynamicTypedClassifierConfig."),(0,n.kt)("span",{className:"path-main"},"type"),"\xa0",(0,n.kt)("abbr",{title:"Required if DynamicTypedClassifierConfig is set"},"\u2753"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type of the classifier to use. For DataHub,  use ",(0,n.kt)("inlineCode",{parentName:"td"},"datahub"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.classifiers.DynamicTypedClassifierConfig."),(0,n.kt)("span",{className:"path-main"},"config"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"object"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The configuration required for initializing the classifier. If not specified, uses defaults for classifer type.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification."),(0,n.kt)("span",{className:"path-main"},"column_pattern"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Regex patterns to filter columns for classification. This is used in combination with other patterns in parent config. Specify regex to match the column name in ",(0,n.kt)("inlineCode",{parentName:"td"},"database.schema.table.column")," format. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"{","'","allow","'",": ","[","'",".","*","'","]",", ","'","deny","'",": ","[","]",", ","'","ignoreCase","'",": True","}")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.column_pattern."),(0,n.kt)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"boolean"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"True")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.column_pattern."),(0,n.kt)("span",{className:"path-main"},"allow"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"array"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of regex patterns to include in ingestion ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"[","'",".","*","'","]")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.column_pattern.allow."),(0,n.kt)("span",{className:"path-main"},"string"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.column_pattern."),(0,n.kt)("span",{className:"path-main"},"deny"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"array"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of regex patterns to exclude from ingestion. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"[","]")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.column_pattern.deny."),(0,n.kt)("span",{className:"path-main"},"string"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification."),(0,n.kt)("span",{className:"path-main"},"table_pattern"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Regex patterns to filter tables for classification. This is used in combination with other patterns in parent config. Specify regex to match the entire table name in ",(0,n.kt)("inlineCode",{parentName:"td"},"database.schema.table")," format. e.g. to match all tables starting with customer in Customer database and public schema, use the regex 'Customer.public.customer.*' ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"{","'","allow","'",": ","[","'",".","*","'","]",", ","'","deny","'",": ","[","]",", ","'","ignoreCase","'",": True","}")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.table_pattern."),(0,n.kt)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"boolean"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"True")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.table_pattern."),(0,n.kt)("span",{className:"path-main"},"allow"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"array"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of regex patterns to include in ingestion ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"[","'",".","*","'","]")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.table_pattern.allow."),(0,n.kt)("span",{className:"path-main"},"string"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.table_pattern."),(0,n.kt)("span",{className:"path-main"},"deny"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"array"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of regex patterns to exclude from ingestion. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"[","]")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"classification.table_pattern.deny."),(0,n.kt)("span",{className:"path-main"},"string"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-main"},"domain"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"map(str,AllowDenyPattern)"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"A class to store allow deny regexes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"domain.",(0,n.kt)("inlineCode",{parentName:"td"},"key"),"."),(0,n.kt)("span",{className:"path-main"},"allow"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"array"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of regex patterns to include in ingestion ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"[","'",".","*","'","]")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"domain.",(0,n.kt)("inlineCode",{parentName:"td"},"key"),".allow."),(0,n.kt)("span",{className:"path-main"},"string"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"domain.",(0,n.kt)("inlineCode",{parentName:"td"},"key"),"."),(0,n.kt)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"boolean"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"True")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"domain.",(0,n.kt)("inlineCode",{parentName:"td"},"key"),"."),(0,n.kt)("span",{className:"path-main"},"deny"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"array"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of regex patterns to exclude from ingestion. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"[","]")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"domain.",(0,n.kt)("inlineCode",{parentName:"td"},"key"),".deny."),(0,n.kt)("span",{className:"path-main"},"string"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-main"},"include_table_item"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"map(str,array)"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"include_table_item.",(0,n.kt)("inlineCode",{parentName:"td"},"key"),"."),(0,n.kt)("span",{className:"path-main"},"object"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"object"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-main"},"table_pattern"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"AllowDenyPattern"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Regex patterns for tables to filter in ingestion. The table name format is 'region.table' ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"{","'","allow","'",": ","[","'",".","*","'","]",", ","'","deny","'",": ","[","]",", ","'","ignoreCase","'",": True","}")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"table_pattern."),(0,n.kt)("span",{className:"path-main"},"ignoreCase"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"boolean"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"True")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"table_pattern."),(0,n.kt)("span",{className:"path-main"},"allow"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"array"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of regex patterns to include in ingestion ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"[","'",".","*","'","]")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"table_pattern.allow."),(0,n.kt)("span",{className:"path-main"},"string"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"table_pattern."),(0,n.kt)("span",{className:"path-main"},"deny"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"array"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of regex patterns to exclude from ingestion. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"[","]")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"table_pattern.deny."),(0,n.kt)("span",{className:"path-main"},"string"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"string"))),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-main"},"stateful_ingestion"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"StatefulStaleMetadataRemovalConfig"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Base specialized config for Stateful Ingestion with stale metadata removal capability.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.kt)("span",{className:"path-main"},"enabled"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"boolean"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether or not to enable stateful ingest. Default: True if a pipeline_name is set and either a datahub-rest sink or ",(0,n.kt)("inlineCode",{parentName:"td"},"datahub_api")," is specified, otherwise False ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"False")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("div",{className:"path-line"},(0,n.kt)("span",{className:"path-prefix"},"stateful_ingestion."),(0,n.kt)("span",{className:"path-main"},"remove_stale_metadata"))," ",(0,n.kt)("div",{className:"type-name-line"},(0,n.kt)("span",{className:"type-name"},"boolean"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Soft-deletes the entities present in the last successful run but missing in the current run with stateful_ingestion enabled. ",(0,n.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,n.kt)("span",{className:"default-value"},"True")))))))),(0,n.kt)(s.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "title": "DynamoDBConfig",\n  "description": "Any source that is a primary producer of Dataset metadata should inherit this class",\n  "type": "object",\n  "properties": {\n    "classification": {\n      "title": "Classification",\n      "description": "For details, refer [Classification](../../../../metadata-ingestion/docs/dev_guides/classification.md).",\n      "default": {\n        "enabled": false,\n        "sample_size": 100,\n        "max_workers": 4,\n        "table_pattern": {\n          "allow": [\n            ".*"\n          ],\n          "deny": [],\n          "ignoreCase": true\n        },\n        "column_pattern": {\n          "allow": [\n            ".*"\n          ],\n          "deny": [],\n          "ignoreCase": true\n        },\n        "info_type_to_term": {},\n        "classifiers": [\n          {\n            "type": "datahub",\n            "config": null\n          }\n        ]\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/ClassificationConfig"\n        }\n      ]\n    },\n    "stateful_ingestion": {\n      "$ref": "#/definitions/StatefulStaleMetadataRemovalConfig"\n    },\n    "env": {\n      "title": "Env",\n      "description": "The environment that all assets produced by this connector belong to",\n      "default": "PROD",\n      "type": "string"\n    },\n    "platform_instance": {\n      "title": "Platform Instance",\n      "description": "The instance of the platform that all assets produced by this recipe belong to",\n      "type": "string"\n    },\n    "aws_access_key_id": {\n      "title": "Aws Access Key Id",\n      "description": "AWS Access Key ID.",\n      "type": "string"\n    },\n    "aws_secret_access_key": {\n      "title": "Aws Secret Access Key",\n      "description": "AWS Secret Key.",\n      "type": "string",\n      "writeOnly": true,\n      "format": "password"\n    },\n    "domain": {\n      "title": "Domain",\n      "description": "regex patterns for tables to filter to assign domain_key. ",\n      "default": {},\n      "type": "object",\n      "additionalProperties": {\n        "$ref": "#/definitions/AllowDenyPattern"\n      }\n    },\n    "include_table_item": {\n      "title": "Include Table Item",\n      "description": "[Advanced] The primary keys of items of a table in dynamodb format the user would like to include in schema. Refer \\"Advanced Configurations\\" section for more details",\n      "type": "object",\n      "additionalProperties": {\n        "type": "array",\n        "items": {\n          "type": "object"\n        }\n      }\n    },\n    "table_pattern": {\n      "title": "Table Pattern",\n      "description": "Regex patterns for tables to filter in ingestion. The table name format is \'region.table\'",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/AllowDenyPattern"\n        }\n      ]\n    }\n  },\n  "required": [\n    "aws_access_key_id",\n    "aws_secret_access_key"\n  ],\n  "additionalProperties": false,\n  "definitions": {\n    "AllowDenyPattern": {\n      "title": "AllowDenyPattern",\n      "description": "A class to store allow deny regexes",\n      "type": "object",\n      "properties": {\n        "allow": {\n          "title": "Allow",\n          "description": "List of regex patterns to include in ingestion",\n          "default": [\n            ".*"\n          ],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "deny": {\n          "title": "Deny",\n          "description": "List of regex patterns to exclude from ingestion.",\n          "default": [],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "ignoreCase": {\n          "title": "Ignorecase",\n          "description": "Whether to ignore case sensitivity during pattern matching.",\n          "default": true,\n          "type": "boolean"\n        }\n      },\n      "additionalProperties": false\n    },\n    "DynamicTypedClassifierConfig": {\n      "title": "DynamicTypedClassifierConfig",\n      "type": "object",\n      "properties": {\n        "type": {\n          "title": "Type",\n          "description": "The type of the classifier to use. For DataHub,  use `datahub`",\n          "type": "string"\n        },\n        "config": {\n          "title": "Config",\n          "description": "The configuration required for initializing the classifier. If not specified, uses defaults for classifer type."\n        }\n      },\n      "required": [\n        "type"\n      ],\n      "additionalProperties": false\n    },\n    "ClassificationConfig": {\n      "title": "ClassificationConfig",\n      "type": "object",\n      "properties": {\n        "enabled": {\n          "title": "Enabled",\n          "description": "Whether classification should be used to auto-detect glossary terms",\n          "default": false,\n          "type": "boolean"\n        },\n        "sample_size": {\n          "title": "Sample Size",\n          "description": "Number of sample values used for classification.",\n          "default": 100,\n          "type": "integer"\n        },\n        "max_workers": {\n          "title": "Max Workers",\n          "description": "Number of worker threads to use for classification. Set to 1 to disable.",\n          "default": 4,\n          "type": "integer"\n        },\n        "table_pattern": {\n          "title": "Table Pattern",\n          "description": "Regex patterns to filter tables for classification. This is used in combination with other patterns in parent config. Specify regex to match the entire table name in `database.schema.table` format. e.g. to match all tables starting with customer in Customer database and public schema, use the regex \'Customer.public.customer.*\'",\n          "default": {\n            "allow": [\n              ".*"\n            ],\n            "deny": [],\n            "ignoreCase": true\n          },\n          "allOf": [\n            {\n              "$ref": "#/definitions/AllowDenyPattern"\n            }\n          ]\n        },\n        "column_pattern": {\n          "title": "Column Pattern",\n          "description": "Regex patterns to filter columns for classification. This is used in combination with other patterns in parent config. Specify regex to match the column name in `database.schema.table.column` format.",\n          "default": {\n            "allow": [\n              ".*"\n            ],\n            "deny": [],\n            "ignoreCase": true\n          },\n          "allOf": [\n            {\n              "$ref": "#/definitions/AllowDenyPattern"\n            }\n          ]\n        },\n        "info_type_to_term": {\n          "title": "Info Type To Term",\n          "description": "Optional mapping to provide glossary term identifier for info type",\n          "default": {},\n          "type": "object",\n          "additionalProperties": {\n            "type": "string"\n          }\n        },\n        "classifiers": {\n          "title": "Classifiers",\n          "description": "Classifiers to use to auto-detect glossary terms. If more than one classifier, infotype predictions from the classifier defined later in sequence take precedance.",\n          "default": [\n            {\n              "type": "datahub",\n              "config": null\n            }\n          ],\n          "type": "array",\n          "items": {\n            "$ref": "#/definitions/DynamicTypedClassifierConfig"\n          }\n        }\n      },\n      "additionalProperties": false\n    },\n    "DynamicTypedStateProviderConfig": {\n      "title": "DynamicTypedStateProviderConfig",\n      "type": "object",\n      "properties": {\n        "type": {\n          "title": "Type",\n          "description": "The type of the state provider to use. For DataHub use `datahub`",\n          "type": "string"\n        },\n        "config": {\n          "title": "Config",\n          "description": "The configuration required for initializing the state provider. Default: The datahub_api config if set at pipeline level. Otherwise, the default DatahubClientConfig. See the defaults (https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/graph/client.py#L19).",\n          "default": {},\n          "type": "object"\n        }\n      },\n      "required": [\n        "type"\n      ],\n      "additionalProperties": false\n    },\n    "StatefulStaleMetadataRemovalConfig": {\n      "title": "StatefulStaleMetadataRemovalConfig",\n      "description": "Base specialized config for Stateful Ingestion with stale metadata removal capability.",\n      "type": "object",\n      "properties": {\n        "enabled": {\n          "title": "Enabled",\n          "description": "Whether or not to enable stateful ingest. Default: True if a pipeline_name is set and either a datahub-rest sink or `datahub_api` is specified, otherwise False",\n          "default": false,\n          "type": "boolean"\n        },\n        "remove_stale_metadata": {\n          "title": "Remove Stale Metadata",\n          "description": "Soft-deletes the entities present in the last successful run but missing in the current run with stateful_ingestion enabled.",\n          "default": true,\n          "type": "boolean"\n        }\n      },\n      "additionalProperties": false\n    }\n  }\n}\n')))),(0,n.kt)("h2",{id:"advanced-configurations"},"Advanced Configurations"),(0,n.kt)("h3",{id:"using-include_table_item-config"},"Using ",(0,n.kt)("inlineCode",{parentName:"h3"},"include_table_item")," config"),(0,n.kt)("p",null,"If there are items that have most representative fields of the table, users could use the ",(0,n.kt)("inlineCode",{parentName:"p"},"include_table_item")," option to provide a list of primary keys of the table in dynamodb format. We include these items in addition to the first 100 items in the table when we scan it."),(0,n.kt)("p",null,"Take ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AppendixSampleTables.html"},"AWS DynamoDB Developer Guide Example tables and data")," as an example, if a account has a table ",(0,n.kt)("inlineCode",{parentName:"p"},"Reply")," in the ",(0,n.kt)("inlineCode",{parentName:"p"},"us-west-2")," region with composite primary key ",(0,n.kt)("inlineCode",{parentName:"p"},"Id")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"ReplyDateTime"),", users can use ",(0,n.kt)("inlineCode",{parentName:"p"},"include_table_item")," to include 2 items as following:"),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml"},'# The table name should be in the format of region.table_name\n# The primary keys should be in the DynamoDB format\ninclude_table_item:\n  us-west-2.Reply:\n    [\n      {\n        "ReplyDateTime": { "S": "2015-09-22T19:58:22.947Z" },\n        "Id": { "S": "Amazon DynamoDB#DynamoDB Thread 1" },\n      },\n      {\n        "ReplyDateTime": { "S": "2015-10-05T19:58:22.947Z" },\n        "Id": { "S": "Amazon DynamoDB#DynamoDB Thread 2" },\n      },\n    ]\n')),(0,n.kt)("h3",{id:"code-coordinates"},"Code Coordinates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Class Name: ",(0,n.kt)("inlineCode",{parentName:"li"},"datahub.ingestion.source.dynamodb.dynamodb.DynamoDBSource")),(0,n.kt)("li",{parentName:"ul"},"Browse on ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/dynamodb/dynamodb.py"},"GitHub"))),(0,n.kt)("h2",null,"Questions"),(0,n.kt)("p",null,"If you've got any questions on configuring ingestion for DynamoDB, feel free to ping us on ",(0,n.kt)("a",{parentName:"p",href:"https://slack.datahubproject.io"},"our Slack"),"."))}N.isMDXComponent=!0}}]);