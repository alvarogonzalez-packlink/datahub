"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[62722],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>v});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(r),d=n,v=p["".concat(s,".").concat(d)]||p[d]||m[d]||i;return r?a.createElement(v,c(c({ref:t},u),{},{components:r})):a.createElement(v,c({ref:t},u))}));function v(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,c=new Array(i);c[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:n,c[1]=o;for(var l=2;l<i;l++)c[l]=r[l];return a.createElement.apply(null,c)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},27806:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=r(87462),n=(r(67294),r(3905));const i={title:"Service Layer",slug:"/metadata-service/services",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/metadata-service/services/README.md"},c="Service Layer",o={unversionedId:"metadata-service/services/README",id:"version-0.12.0/metadata-service/services/README",title:"Service Layer",description:"Module to abstract away business logic from implementation specific libraries to make them lighter weight from a",source:"@site/versioned_docs/version-0.12.0/metadata-service/services/README.md",sourceDirName:"metadata-service/services",slug:"/metadata-service/services",permalink:"/docs/0.12.0/metadata-service/services",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/metadata-service/services/README.md",tags:[],version:"0.12.0",frontMatter:{title:"Service Layer",slug:"/metadata-service/services",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/metadata-service/services/README.md"}},s={},l=[],u={toc:l},p="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"service-layer"},"Service Layer"),(0,n.kt)("p",null,"Module to abstract away business logic from implementation specific libraries to make them lighter weight from a\ndependency perspective. Service classes should be here unless they require direct usage of implementation specific libraries\n(i.e. ElasticSearch, Ebean, Neo4J, etc.)."))}m.isMDXComponent=!0}}]);