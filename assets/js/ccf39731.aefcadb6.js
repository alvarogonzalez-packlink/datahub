"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[62128],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,h=u["".concat(o,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:i,l[1]=s;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},18679:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),i=n(86010);const r={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r.tabItem,l),hidden:n},t)}},73992:(e,t,n)=>{n.d(t,{Z:()=>v});var a=n(87462),i=n(67294),r=n(86010),l=n(72957),s=n(16550),o=n(75238),p=n(33609),c=n(92560);function u(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function d(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=d(e),[l,s]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[o,p]=h({queryString:n,groupId:a}),[u,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,c.Nk)(n);return[a,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),k=(()=>{const e=o??u;return m({value:e,tabValues:r})?e:null})();(0,i.useLayoutEffect)((()=>{k&&s(k)}),[k]);return{selectedValue:l,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),f(e)}),[p,f,r]),tabValues:r}}var k=n(51048);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function N(e){let{className:t,block:n,selectedValue:s,selectValue:o,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=p[n].value;a!==s&&(u(t),o(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},l,{className:(0,r.Z)("tabs__item",g.tabItem,l?.className,{"tabs__item--active":s===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=f(e);return i.createElement("div",{className:(0,r.Z)("tabs-container",g.tabList)},i.createElement(N,(0,a.Z)({},e,t)),i.createElement(b,(0,a.Z)({},e,t)))}function v(e){const t=(0,k.Z)();return i.createElement(y,(0,a.Z)({key:String(t)},e))}},75611:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var a=n(87462),i=(n(67294),n(3905)),r=n(73992),l=n(18679);const s={sidebar_position:34,title:"NiFi",slug:"/generated/ingestion/sources/nifi",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/nifi.md"},o="NiFi",p={unversionedId:"docs/generated/ingestion/sources/nifi",id:"version-0.12.0/docs/generated/ingestion/sources/nifi",title:"NiFi",description:"Certified",source:"@site/versioned_docs/version-0.12.0/docs/generated/ingestion/sources/nifi.md",sourceDirName:"docs/generated/ingestion/sources",slug:"/generated/ingestion/sources/nifi",permalink:"/docs/0.12.0/generated/ingestion/sources/nifi",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/nifi.md",tags:[],version:"0.12.0",sidebarPosition:34,frontMatter:{sidebar_position:34,title:"NiFi",slug:"/generated/ingestion/sources/nifi",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/ingestion/sources/nifi.md"},sidebar:"overviewSidebar",previous:{title:"MySQL",permalink:"/docs/0.12.0/generated/ingestion/sources/mysql"},next:{title:"Okta",permalink:"/docs/0.12.0/generated/ingestion/sources/okta"}},c={},u=[{value:"Important Capabilities",id:"important-capabilities",level:3},{value:"CLI based Ingestion",id:"cli-based-ingestion",level:3},{value:"Install the Plugin",id:"install-the-plugin",level:4},{value:"Starter Recipe",id:"starter-recipe",level:3},{value:"Config Details",id:"config-details",level:3},{value:"Authentication",id:"authentication",level:3},{value:"Single User Authentication (<code>auth: SINGLE_USER</code>)",id:"single-user-authentication-auth-single_user",level:4},{value:"Client Certificates Authentication (<code>auth: CLIENT_CERT</code>)",id:"client-certificates-authentication-auth-client_cert",level:4},{value:"Kerberos Authentication via SPNEGO (<code>auth: Kerberos</code>)",id:"kerberos-authentication-via-spnego-auth-kerberos",level:4},{value:"Basic Authentication (<code>auth: BASIC_AUTH</code>)",id:"basic-authentication-auth-basic_auth",level:4},{value:"No Authentication (<code>auth: NO_AUTH</code>)",id:"no-authentication-auth-no_auth",level:4},{value:"Access Policies",id:"access-policies",level:3},{value:"Global Access Policies",id:"global-access-policies",level:4},{value:"Component level Access Policies (required to be set on root process group)",id:"component-level-access-policies-required-to-be-set-on-root-process-group",level:4},{value:"Code Coordinates",id:"code-coordinates",level:3}],d={toc:u},m="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"nifi"},"NiFi"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/support%20status-certified-brightgreen",alt:"Certified"})),(0,i.kt)("h3",{id:"important-capabilities"},"Important Capabilities"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Capability"),(0,i.kt)("th",{parentName:"tr",align:null},"Status"),(0,i.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Table-Level Lineage"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null},"Supported. See docs for limitations")))),(0,i.kt)("p",null,"This plugin extracts the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"NiFi flow as ",(0,i.kt)("inlineCode",{parentName:"li"},"DataFlow")," entity"),(0,i.kt)("li",{parentName:"ul"},"Ingress, egress processors, remote input and output ports as ",(0,i.kt)("inlineCode",{parentName:"li"},"DataJob")," entity"),(0,i.kt)("li",{parentName:"ul"},"Input and output ports receiving remote connections as ",(0,i.kt)("inlineCode",{parentName:"li"},"Dataset")," entity"),(0,i.kt)("li",{parentName:"ul"},"Lineage information between external datasets and ingress/egress processors by analyzing provenance events")),(0,i.kt)("p",null,"Current limitations:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Limited ingress/egress processors are supported",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"S3: ",(0,i.kt)("inlineCode",{parentName:"li"},"ListS3"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"FetchS3Object"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"PutS3Object")),(0,i.kt)("li",{parentName:"ul"},"SFTP: ",(0,i.kt)("inlineCode",{parentName:"li"},"ListSFTP"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"FetchSFTP"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"GetSFTP"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"PutSFTP"))))),(0,i.kt)("h3",{id:"cli-based-ingestion"},"CLI based Ingestion"),(0,i.kt)("h4",{id:"install-the-plugin"},"Install the Plugin"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"pip install 'acryl-datahub[nifi]'\n")),(0,i.kt)("h3",{id:"starter-recipe"},"Starter Recipe"),(0,i.kt)("p",null,"Check out the following recipe to get started with ingestion! See ",(0,i.kt)("a",{parentName:"p",href:"#config-details"},"below")," for full configuration options."),(0,i.kt)("p",null,"For general pointers on writing and running a recipe, see our ",(0,i.kt)("a",{parentName:"p",href:"/docs/0.12.0/metadata-ingestion#recipes"},"main recipe guide"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'source:\n  type: "nifi"\n  config:\n    # Coordinates\n    site_url: "https://localhost:8443/nifi/"\n\n    # Credentials\n    auth: SINGLE_USER\n    username: admin\n    password: password\n\nsink:\n  # sink configs\n')),(0,i.kt)("h3",{id:"config-details"},"Config Details"),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"options",label:"Options",default:!0,mdxType:"TabItem"},(0,i.kt)("p",null,"Note that a ",(0,i.kt)("inlineCode",{parentName:"p"},".")," is used to denote nested fields in the YAML recipe."),(0,i.kt)("div",{className:"config-table"},(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"site_url"),"\xa0",(0,i.kt)("abbr",{title:"Required"},"\u2705"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"URL for Nifi, ending with /nifi/. e.g. ",(0,i.kt)("a",{parentName:"td",href:"https://mynifi.domain/nifi/"},"https://mynifi.domain/nifi/"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"auth"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"Enum"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Nifi authentication. must be one of : NO_AUTH, SINGLE_USER, CLIENT_CERT, KERBEROS ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"NO","_","AUTH")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"ca_file"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"One of boolean, string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Path to PEM file containing certs for the root CA(s) for the NiFi")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"client_cert_file"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},'Path to PEM file containing the public certificates for the user/client identity, must be set for auth = "CLIENT_CERT"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"client_key_file"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Path to PEM file containing the client\u2019s secret key")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"client_key_password"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The password to decrypt the client_key_file")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"password"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},'Nifi password, must be set for auth = "SINGLE_USER"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"provenance_days"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"integer"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"time window to analyze provenance events for external datasets ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"7")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"site_name"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Site name to identify this site with, useful when using input and output ports receiving remote connections ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"default")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"site_url_to_site_name"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"map(str,string)"))),(0,i.kt)("td",{parentName:"tr",align:"left"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"username"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},'Nifi username, must be set for auth = "SINGLE_USER"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"env"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"string"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The environment that all assets produced by this connector belong to ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"PROD")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-main"},"process_group_pattern"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"AllowDenyPattern"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"regex patterns for filtering process groups ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"{","'","allow","'",": ","[","'",".","*","'","]",", ","'","deny","'",": ","[","]",", ","'","ignoreCase","'",": True","}")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-prefix"},"process_group_pattern."),(0,i.kt)("span",{className:"path-main"},"allow"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"array(string)"))),(0,i.kt)("td",{parentName:"tr",align:"left"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-prefix"},"process_group_pattern."),(0,i.kt)("span",{className:"path-main"},"deny"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"array(string)"))),(0,i.kt)("td",{parentName:"tr",align:"left"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"path-line"},(0,i.kt)("span",{className:"path-prefix"},"process_group_pattern."),(0,i.kt)("span",{className:"path-main"},"ignoreCase"))," ",(0,i.kt)("div",{className:"type-name-line"},(0,i.kt)("span",{className:"type-name"},"boolean"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to ignore case sensitivity during pattern matching. ",(0,i.kt)("div",{className:"default-line default-line-with-docs"},"Default: ",(0,i.kt)("span",{className:"default-value"},"True")))))))),(0,i.kt)(l.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://json-schema.org/"},"JSONSchema")," for this configuration is inlined below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "title": "NifiSourceConfig",\n  "description": "Any source that produces dataset urns in a single environment should inherit this class",\n  "type": "object",\n  "properties": {\n    "env": {\n      "title": "Env",\n      "description": "The environment that all assets produced by this connector belong to",\n      "default": "PROD",\n      "type": "string"\n    },\n    "site_url": {\n      "title": "Site Url",\n      "description": "URL for Nifi, ending with /nifi/. e.g. https://mynifi.domain/nifi/",\n      "type": "string"\n    },\n    "auth": {\n      "description": "Nifi authentication. must be one of : NO_AUTH, SINGLE_USER, CLIENT_CERT, KERBEROS",\n      "default": "NO_AUTH",\n      "allOf": [\n        {\n          "$ref": "#/definitions/NifiAuthType"\n        }\n      ]\n    },\n    "provenance_days": {\n      "title": "Provenance Days",\n      "description": "time window to analyze provenance events for external datasets",\n      "default": 7,\n      "type": "integer"\n    },\n    "process_group_pattern": {\n      "title": "Process Group Pattern",\n      "description": "regex patterns for filtering process groups",\n      "default": {\n        "allow": [\n          ".*"\n        ],\n        "deny": [],\n        "ignoreCase": true\n      },\n      "allOf": [\n        {\n          "$ref": "#/definitions/AllowDenyPattern"\n        }\n      ]\n    },\n    "site_name": {\n      "title": "Site Name",\n      "description": "Site name to identify this site with, useful when using input and output ports receiving remote connections",\n      "default": "default",\n      "type": "string"\n    },\n    "site_url_to_site_name": {\n      "title": "Site Url To Site Name",\n      "description": "Lookup to find site_name for site_url ending with /nifi/, required if using remote process groups in nifi flow",\n      "default": {},\n      "type": "object",\n      "additionalProperties": {\n        "type": "string"\n      }\n    },\n    "username": {\n      "title": "Username",\n      "description": "Nifi username, must be set for auth = \\"SINGLE_USER\\"",\n      "type": "string"\n    },\n    "password": {\n      "title": "Password",\n      "description": "Nifi password, must be set for auth = \\"SINGLE_USER\\"",\n      "type": "string"\n    },\n    "client_cert_file": {\n      "title": "Client Cert File",\n      "description": "Path to PEM file containing the public certificates for the user/client identity, must be set for auth = \\"CLIENT_CERT\\"",\n      "type": "string"\n    },\n    "client_key_file": {\n      "title": "Client Key File",\n      "description": "Path to PEM file containing the client\\u2019s secret key",\n      "type": "string"\n    },\n    "client_key_password": {\n      "title": "Client Key Password",\n      "description": "The password to decrypt the client_key_file",\n      "type": "string"\n    },\n    "ca_file": {\n      "title": "Ca File",\n      "description": "Path to PEM file containing certs for the root CA(s) for the NiFi",\n      "anyOf": [\n        {\n          "type": "boolean"\n        },\n        {\n          "type": "string"\n        }\n      ]\n    }\n  },\n  "required": [\n    "site_url"\n  ],\n  "additionalProperties": false,\n  "definitions": {\n    "NifiAuthType": {\n      "title": "NifiAuthType",\n      "description": "An enumeration.",\n      "enum": [\n        "NO_AUTH",\n        "SINGLE_USER",\n        "CLIENT_CERT",\n        "KERBEROS",\n        "BASIC_AUTH"\n      ]\n    },\n    "AllowDenyPattern": {\n      "title": "AllowDenyPattern",\n      "description": "A class to store allow deny regexes",\n      "type": "object",\n      "properties": {\n        "allow": {\n          "title": "Allow",\n          "description": "List of regex patterns to include in ingestion",\n          "default": [\n            ".*"\n          ],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "deny": {\n          "title": "Deny",\n          "description": "List of regex patterns to exclude from ingestion.",\n          "default": [],\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "ignoreCase": {\n          "title": "Ignorecase",\n          "description": "Whether to ignore case sensitivity during pattern matching.",\n          "default": true,\n          "type": "boolean"\n        }\n      },\n      "additionalProperties": false\n    }\n  }\n}\n')))),(0,i.kt)("h3",{id:"authentication"},"Authentication"),(0,i.kt)("p",null,"This connector supports following authentication mechanisms"),(0,i.kt)("h4",{id:"single-user-authentication-auth-single_user"},"Single User Authentication (",(0,i.kt)("inlineCode",{parentName:"h4"},"auth: SINGLE_USER"),")"),(0,i.kt)("p",null,"Connector will pass this ",(0,i.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"password")," as used on Nifi Login Page over ",(0,i.kt)("inlineCode",{parentName:"p"},"/access/token")," REST endpoint. This mode also works when ",(0,i.kt)("a",{parentName:"p",href:"https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#kerberos_login_identity_provider"},"Kerberos login identity provider")," is set up for Nifi."),(0,i.kt)("h4",{id:"client-certificates-authentication-auth-client_cert"},"Client Certificates Authentication (",(0,i.kt)("inlineCode",{parentName:"h4"},"auth: CLIENT_CERT"),")"),(0,i.kt)("p",null,"Connector will use ",(0,i.kt)("inlineCode",{parentName:"p"},"client_cert_file"),"(required) and ",(0,i.kt)("inlineCode",{parentName:"p"},"client_key_file"),"(optional), ",(0,i.kt)("inlineCode",{parentName:"p"},"client_key_password"),"(optional) for mutual TLS authentication. "),(0,i.kt)("h4",{id:"kerberos-authentication-via-spnego-auth-kerberos"},"Kerberos Authentication via SPNEGO (",(0,i.kt)("inlineCode",{parentName:"h4"},"auth: Kerberos"),")"),(0,i.kt)("p",null,"If nifi has been configured to use ",(0,i.kt)("a",{parentName:"p",href:"https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#kerberos_service"},"Kerberos SPNEGO"),", connector will pass user\u2019s Kerberos ticket to nifi over  ",(0,i.kt)("inlineCode",{parentName:"p"},"/access/kerberos")," REST endpoint. It is assumed that user's Kerberos ticket is already present on the machine on which ingestion runs. This is usually done by installing krb5-user and then running kinit for user."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"sudo apt install krb5-user\nkinit user@REALM\n")),(0,i.kt)("h4",{id:"basic-authentication-auth-basic_auth"},"Basic Authentication (",(0,i.kt)("inlineCode",{parentName:"h4"},"auth: BASIC_AUTH"),")"),(0,i.kt)("p",null,"Connector will use ",(0,i.kt)("a",{parentName:"p",href:"https://requests.readthedocs.io/en/latest/user/authentication/#basic-authentication"},"HTTPBasicAuth")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"password"),"."),(0,i.kt)("h4",{id:"no-authentication-auth-no_auth"},"No Authentication (",(0,i.kt)("inlineCode",{parentName:"h4"},"auth: NO_AUTH"),")"),(0,i.kt)("p",null,"This is useful for testing purposes."),(0,i.kt)("h3",{id:"access-policies"},"Access Policies"),(0,i.kt)("p",null,"This connector requires following access policies to be set in Nifi for ingestion user."),(0,i.kt)("h4",{id:"global-access-policies"},"Global Access Policies"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Policy"),(0,i.kt)("th",{parentName:"tr",align:null},"Privilege"),(0,i.kt)("th",{parentName:"tr",align:null},"Resource"),(0,i.kt)("th",{parentName:"tr",align:null},"Action"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"view the UI"),(0,i.kt)("td",{parentName:"tr",align:null},"Allows users to view the UI"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"/flow")),(0,i.kt)("td",{parentName:"tr",align:null},"R")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"query provenance"),(0,i.kt)("td",{parentName:"tr",align:null},"Allows users to submit a Provenance Search and request Event Lineage"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"/provenance")),(0,i.kt)("td",{parentName:"tr",align:null},"R")))),(0,i.kt)("h4",{id:"component-level-access-policies-required-to-be-set-on-root-process-group"},"Component level Access Policies (required to be set on root process group)"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Policy"),(0,i.kt)("th",{parentName:"tr",align:null},"Privilege"),(0,i.kt)("th",{parentName:"tr",align:null},"Resource"),(0,i.kt)("th",{parentName:"tr",align:null},"Action"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"view the component"),(0,i.kt)("td",{parentName:"tr",align:null},"Allows users to view component configuration details"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"/<component-type>/<component-UUID>")),(0,i.kt)("td",{parentName:"tr",align:null},"R")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"view the data"),(0,i.kt)("td",{parentName:"tr",align:null},"Allows users to view metadata and content for this component in flowfile queues in outbound connections and through provenance events"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"/data/<component-type>/<component-UUID>")),(0,i.kt)("td",{parentName:"tr",align:null},"R")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"view provenance"),(0,i.kt)("td",{parentName:"tr",align:null},"Allows users to view provenance events generated by this component"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"/provenance-data/<component-type>/<component-UUID>")),(0,i.kt)("td",{parentName:"tr",align:null},"R")))),(0,i.kt)("h3",{id:"code-coordinates"},"Code Coordinates"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Class Name: ",(0,i.kt)("inlineCode",{parentName:"li"},"datahub.ingestion.source.nifi.NifiSource")),(0,i.kt)("li",{parentName:"ul"},"Browse on ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/src/datahub/ingestion/source/nifi.py"},"GitHub"))),(0,i.kt)("h2",null,"Questions"),(0,i.kt)("p",null,"If you've got any questions on configuring ingestion for NiFi, feel free to ping us on ",(0,i.kt)("a",{parentName:"p",href:"https://slack.datahubproject.io"},"our Slack"),"."))}h.isMDXComponent=!0}}]);