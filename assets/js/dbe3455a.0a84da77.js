"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[34706],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,k=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},16712:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={title:"Sinks",slug:"/metadata-ingestion/sink_overview",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/sink_overview.md"},o="Sinks",s={unversionedId:"metadata-ingestion/sink_overview",id:"version-0.13.0/metadata-ingestion/sink_overview",title:"Sinks",description:"Sinks are destinations for metadata.",source:"@site/versioned_docs/version-0.13.0/metadata-ingestion/sink_overview.md",sourceDirName:"metadata-ingestion",slug:"/metadata-ingestion/sink_overview",permalink:"/docs/metadata-ingestion/sink_overview",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/sink_overview.md",tags:[],version:"0.13.0",frontMatter:{title:"Sinks",slug:"/metadata-ingestion/sink_overview",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/metadata-ingestion/sink_overview.md"},sidebar:"overviewSidebar",previous:{title:"Recipes",permalink:"/docs/metadata-ingestion/recipe_overview"},next:{title:"Console",permalink:"/docs/metadata-ingestion/sink_docs/console"}},l={},c=[{value:"Types of Sinks",id:"types-of-sinks",level:2},{value:"Default Sink",id:"default-sink",level:2}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sinks"},"Sinks"),(0,r.kt)("p",null,"Sinks are ",(0,r.kt)("strong",{parentName:"p"},"destinations for metadata"),"."),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{width:"70%",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/sources-sinks.png"})),(0,r.kt)("p",null,"In general, the sink will be defined in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion/recipe_overview"},"recipe")," after the ",(0,r.kt)("a",{parentName:"p",href:"/docs/metadata-ingestion/source-docs-template"},"source")," like below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"source: ...\n\nsink:\n  type: <sink_type>\n  config: ...\n")),(0,r.kt)("h2",{id:"types-of-sinks"},"Types of Sinks"),(0,r.kt)("p",null,"When configuring ingestion for DataHub, you're likely to be sending the metadata to DataHub over either one of the following."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/metadata-ingestion/sink_docs/datahub#datahub-rest"},"REST (datahub-rest)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/metadata-ingestion/sink_docs/datahub#datahub-kafka"},"Kafka (datahub-kafka)"))),(0,r.kt)("p",null,"For debugging purposes or troubleshooting, the following sinks can be useful:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/metadata-ingestion/sink_docs/file"},"File")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/metadata-ingestion/sink_docs/console"},"Console"))),(0,r.kt)("h2",{id:"default-sink"},"Default Sink"),(0,r.kt)("p",null,"Since ",(0,r.kt)("inlineCode",{parentName:"p"},"acryl-datahub")," version ",(0,r.kt)("inlineCode",{parentName:"p"},">=0.8.33.2"),", the default sink is assumed to be a ",(0,r.kt)("inlineCode",{parentName:"p"},"datahub-rest")," endpoint."))}p.isMDXComponent=!0}}]);