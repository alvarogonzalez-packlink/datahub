"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[89665,49804,27423,5042,82661,39328,16947,94566,72185,70756,48375,6237,28618,50999,73380,95761,18142,40523,62904,85285,7666,35238,12857,8e4,57619,45714,23333,90476,68095,56190,33809,99631,22012,54869,77250,89155,11536,44393,66774,20583,42964,90608,68227,45846,23465,1084,78703,56322,33941,89179,3417,25798,48179,70560,13893,36274,58655,81036,24369,46750,16226,93845,60988,38607,5750,83369,50512,28131,37178,14797,29035,51416,84273,6654,39511,61892,94749,17130,8083,30464,31452,9071,86690,64309,20976,98595,76214,53833,52404,30023,44261,66642,89023,11404,33785,56166,78547,928,65213,87594,22455,44836,77693,74,11979,34360,67217,89598,1503,23884,9646,87265,54408,32027,20122,97741,64884,42503,88694,66313,96837,19218,41599,63980,86361,8742,31123,53504,17789,40170,84028,61647,39266,16885,73552,51171,28790,6409,4980,82599,19635,42016,74873,97254,30111,52492,85349,7730,40587,62968,90634,68253,35396,13015,80158,57777,24920,2539,69682,47301,77825,206,22587,44968,88301,10682,33063,56873,79254,13432,91051,68670,46289,23908,1527,79146,56765,92480,70099,623,23004,55861,78242,90147,12528,45385,67766,21575,43956,87814,65433,32576,10195,98290,75909],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>m});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(n),g=r,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||i;return n?a.createElement(m,l(l({ref:t},c),{},{components:n})):a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5400:(e,t,n)=>{n.d(t,{A:()=>l});var a=n(96540),r=n(20053);const i={tabItem:"tabItem_Ymn6"};function l({children:e,hidden:t,className:n}){return a.createElement("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,n),hidden:t},e)}},53720:(e,t,n)=>{n.d(t,{A:()=>T});var a=n(96540),r=n(20053),i=n(65697),l=n(56347),o=n(9226),s=n(34387),u=n(28609);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function d(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function p(e){return function(e){var t,n;return null!==(n=null===(t=a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))||void 0===t?void 0:t.filter(Boolean))&&void 0!==n?n:[]}(e).map((({props:{value:e,label:t,attributes:n,default:a}})=>({value:e,label:t,attributes:n,default:a})))}function g(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=null!=t?t:p(n);return function(e){const t=(0,s.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m({value:e,tabValues:t}){return t.some((t=>t.value===e))}function y({queryString:e=!1,groupId:t}){const n=(0,l.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:e,groupId:t}),i=(0,o.aZ)(r),s=(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace(d(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){c(e,t,n[t])}))}return e}({},n.location),{search:t.toString()}))}),[r,n]);return[i,s]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,i=g(e),[l,o]=(0,a.useState)((()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}var n;const a=null!==(n=t.find((e=>e.default)))&&void 0!==n?n:t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[s,c]=y({queryString:n,groupId:r}),[d,p]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,u.Dv)(t);return[n,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:r}),f=(()=>{const e=null!=s?s:d;return m({value:e,tabValues:i})?e:null})();(0,a.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),p(e)}),[c,p,i]),tabValues:i}}var b=n(20162);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function O(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){v(e,t,n[t])}))}return e}function w(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function P({className:e,block:t,selectedValue:n,selectValue:l,tabValues:o}){const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.a_)(),c=e=>{const t=e.currentTarget,a=s.indexOf(t),r=o[a].value;r!==n&&(u(t),l(r))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;var n;t=null!==(n=s[a])&&void 0!==n?n:s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;var a;t=null!==(a=s[n])&&void 0!==a?a:s[s.length-1];break}}null==t||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e)},o.map((({value:e,label:t,attributes:i})=>a.createElement("li",w(O({role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,key:e,ref:e=>s.push(e),onKeyDown:d,onClick:c},i),{className:(0,r.A)("tabs__item",h.tabItem,null==i?void 0:i.className,{"tabs__item--active":n===e})}),null!=t?t:e))))}function _({lazy:e,children:t,selectedValue:n}){const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=r.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function j(e){const t=f(e);return a.createElement("div",{className:(0,r.A)("tabs-container",h.tabList)},a.createElement(P,O({},e,t)),a.createElement(_,O({},e,t)))}function T(e){const t=(0,b.A)();return a.createElement(j,O({key:String(t)},e))}},64384:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>f,frontMatter:()=>u,metadata:()=>d,toc:()=>g});n(96540);var a=n(15680),r=n(53720),i=n(5400);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const u={title:"Lineage",slug:"/api/tutorials/lineage",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/lineage.md"},c="Lineage",d={unversionedId:"docs/api/tutorials/lineage",id:"version-0.13.0/docs/api/tutorials/lineage",title:"Lineage",description:"Why Would You Use Lineage?",source:"@site/versioned_docs/version-0.13.0/docs/api/tutorials/lineage.md",sourceDirName:"docs/api/tutorials",slug:"/api/tutorials/lineage",permalink:"/docs/0.13.0/api/tutorials/lineage",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/lineage.md",tags:[],version:"0.13.0",frontMatter:{title:"Lineage",slug:"/api/tutorials/lineage",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/api/tutorials/lineage.md"},sidebar:"overviewSidebar",previous:{title:"Dataset",permalink:"/docs/0.13.0/api/tutorials/datasets"},next:{title:"Tags",permalink:"/docs/0.13.0/api/tutorials/tags"}},p={},g=[{value:"Why Would You Use Lineage?",id:"why-would-you-use-lineage",level:2},{value:"Goal Of This Guide",id:"goal-of-this-guide",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Add Lineage",id:"add-lineage",level:2},{value:"Expected Outcomes of Adding Lineage",id:"expected-outcomes-of-adding-lineage",level:3},{value:"Add Column-level Lineage",id:"add-column-level-lineage",level:2},{value:"Expected Outcome of Adding Column Level Lineage",id:"expected-outcome-of-adding-column-level-lineage",level:3},{value:"Read Lineage",id:"read-lineage",level:2}],m={toc:g},y="wrapper";function f(e){var{components:t}=e,n=s(e,["components"]);return(0,a.yg)(y,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){l(e,t,n[t])}))}return e}({},m,n),{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"lineage"},"Lineage"),(0,a.yg)("h2",{id:"why-would-you-use-lineage"},"Why Would You Use Lineage?"),(0,a.yg)("p",null,"Lineage is used to capture data dependencies within an organization. It allows you to track the inputs from which a data asset is derived, along with the data assets that depend on it downstream."),(0,a.yg)("p",null,"For more information about lineage, refer to ",(0,a.yg)("a",{parentName:"p",href:"/docs/0.13.0/generated/lineage/lineage-feature-guide"},"About DataHub Lineage"),"."),(0,a.yg)("h3",{id:"goal-of-this-guide"},"Goal Of This Guide"),(0,a.yg)("p",null,"This guide will show you how to"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Add lineage between datasets."),(0,a.yg)("li",{parentName:"ul"},"Add column-level lineage between datasets.")),(0,a.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.yg)("p",null,"For this tutorial, you need to deploy DataHub Quickstart and ingest sample data.\nFor detailed steps, please refer to ",(0,a.yg)("a",{parentName:"p",href:"/docs/0.13.0/quickstart"},"Datahub Quickstart Guide"),"."),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"Before adding lineage, you need to ensure the targeted dataset is already present in your datahub.\nIf you attempt to manipulate entities that do not exist, your operation will fail.\nIn this guide, we will be using data from sample ingestion.")),(0,a.yg)("h2",{id:"add-lineage"},"Add Lineage"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(i.A,{value:"graphql",label:"GraphQL",default:!0,mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'mutation updateLineage {\n  updateLineage(\n    input: {\n      edgesToAdd: [\n        {\n          downstreamUrn: "urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)"\n          upstreamUrn: "urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)"\n        }\n      ]\n      edgesToRemove: []\n    }\n  )\n}\n')),(0,a.yg)("p",null,"Note that you can create a list of edges. For example, if you want to assign multiple upstream entities to a downstream entity, you can do the following."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'mutation updateLineage {\n  updateLineage(\n    input: {\n      edgesToAdd: [\n        {\n          downstreamUrn: "urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)"\n          upstreamUrn: "urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)"\n        }\n        {\n          downstreamUrn: "urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)"\n          upstreamUrn: "urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)"\n        }\n      ]\n      edgesToRemove: []\n    }\n  )\n}\n\n')),(0,a.yg)("p",null,"For more information about the ",(0,a.yg)("inlineCode",{parentName:"p"},"updateLineage")," mutation, please refer to ",(0,a.yg)("a",{parentName:"p",href:"/docs/graphql/mutations/#updatelineage"},"updateLineage"),"."),(0,a.yg)("p",null,"If you see the following response, the operation was successful:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'{\n  "data": {\n    "updateLineage": true\n  },\n  "extensions": {}\n}\n'))),(0,a.yg)(i.A,{value:"curl",label:"Curl",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8080/api/graphql\' \\\n--header \'Authorization: Bearer <my-access-token>\' \\\n--header \'Content-Type: application/json\'  --data-raw \'{ "query": "mutation updateLineage { updateLineage( input:{ edgesToAdd : { downstreamUrn: \\"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)\\", upstreamUrn : \\"urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)\\"}, edgesToRemove :{downstreamUrn: \\"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)\\",upstreamUrn : \\"urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)\\" } })}", "variables":{}}\'\n')),(0,a.yg)("p",null,"Expected Response:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{ "data": { "updateLineage": true }, "extensions": {} }\n'))),(0,a.yg)(i.A,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/lineage_emitter_rest.py\nimport datahub.emitter.mce_builder as builder\nfrom datahub.emitter.rest_emitter import DatahubRestEmitter\n\n# Construct a lineage object.\nlineage_mce = builder.make_lineage_mce(\n    [\n        builder.make_dataset_urn("hive", "fct_users_deleted"),  # Upstream\n    ],\n    builder.make_dataset_urn("hive", "logging_events"),  # Downstream\n)\n\n# Create an emitter to the GMS REST API.\nemitter = DatahubRestEmitter("http://localhost:8080")\n\n# Emit metadata!\nemitter.emit_mce(lineage_mce)\n\n')))),(0,a.yg)("h3",{id:"expected-outcomes-of-adding-lineage"},"Expected Outcomes of Adding Lineage"),(0,a.yg)("p",null,"You can now see the lineage between ",(0,a.yg)("inlineCode",{parentName:"p"},"fct_users_deleted")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"logging_events"),"."),(0,a.yg)("p",{align:"center"},(0,a.yg)("img",{width:"70%",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/apis/tutorials/lineage-added.png"})),(0,a.yg)("h2",{id:"add-column-level-lineage"},"Add Column-level Lineage"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(i.A,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/lineage_emitter_dataset_finegrained_sample.py\nimport datahub.emitter.mce_builder as builder\nfrom datahub.emitter.mcp import MetadataChangeProposalWrapper\nfrom datahub.emitter.rest_emitter import DatahubRestEmitter\nfrom datahub.metadata.com.linkedin.pegasus2avro.dataset import (\n    DatasetLineageType,\n    FineGrainedLineage,\n    FineGrainedLineageDownstreamType,\n    FineGrainedLineageUpstreamType,\n    Upstream,\n    UpstreamLineage,\n)\n\n\ndef datasetUrn(tbl):\n    return builder.make_dataset_urn("hive", tbl)\n\n\ndef fldUrn(tbl, fld):\n    return builder.make_schema_field_urn(datasetUrn(tbl), fld)\n\n\nfineGrainedLineages = [\n    FineGrainedLineage(\n        upstreamType=FineGrainedLineageUpstreamType.FIELD_SET,\n        upstreams=[\n            fldUrn("fct_users_deleted", "browser_id"),\n            fldUrn("fct_users_created", "user_id"),\n        ],\n        downstreamType=FineGrainedLineageDownstreamType.FIELD,\n        downstreams=[fldUrn("logging_events", "browser")],\n    ),\n]\n\n\n# this is just to check if any conflicts with existing Upstream, particularly the DownstreamOf relationship\nupstream = Upstream(\n    dataset=datasetUrn("fct_users_deleted"), type=DatasetLineageType.TRANSFORMED\n)\n\nfieldLineages = UpstreamLineage(\n    upstreams=[upstream], fineGrainedLineages=fineGrainedLineages\n)\n\nlineageMcp = MetadataChangeProposalWrapper(\n    entityUrn=datasetUrn("logging_events"),\n    aspect=fieldLineages,\n)\n\n# Create an emitter to the GMS REST API.\nemitter = DatahubRestEmitter("http://localhost:8080")\n\n# Emit metadata!\nemitter.emit_mcp(lineageMcp)\n\n')))),(0,a.yg)("h3",{id:"expected-outcome-of-adding-column-level-lineage"},"Expected Outcome of Adding Column Level Lineage"),(0,a.yg)("p",null,"You can now see the column-level lineage between datasets. Note that you have to enable ",(0,a.yg)("inlineCode",{parentName:"p"},"Show Columns")," to be able to see the column-level lineage."),(0,a.yg)("p",{align:"center"},(0,a.yg)("img",{width:"70%",src:"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/apis/tutorials/column-level-lineage-added.png"})),(0,a.yg)("h2",{id:"read-lineage"},"Read Lineage"),(0,a.yg)(r.A,{mdxType:"Tabs"},(0,a.yg)(i.A,{value:"graphql",label:"GraphQL",default:!0,mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-graphql"},'query searchAcrossLineage {\n  searchAcrossLineage(\n    input: {\n      query: "*"\n      urn: "urn:li:dataset:(urn:li:dataPlatform:dbt,long_tail_companions.adoption.human_profiles,PROD)"\n      start: 0\n      count: 10\n      direction: DOWNSTREAM\n      orFilters: [\n        {\n          and: [\n            {\n              condition: EQUAL\n              negated: false\n              field: "degree"\n              values: ["1", "2", "3+"]\n            }\n          ]\n        }\n      ]\n    }\n  ) {\n    searchResults {\n      degree\n      entity {\n        urn\n        type\n      }\n    }\n  }\n}\n')),(0,a.yg)("p",null,"This example shows using lineage degrees as a filter, but additional search filters can be included here as well.")),(0,a.yg)(i.A,{value:"curl",label:"Curl",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8080/api/graphql\' \\\n--header \'Authorization: Bearer <my-access-token>\' \\\n--header \'Content-Type: application/json\'  --data-raw \'{ { "query": "query searchAcrossLineage { searchAcrossLineage( input: { query: \\"*\\" urn: \\"urn:li:dataset:(urn:li:dataPlatform:dbt,long_tail_companions.adoption.human_profiles,PROD)\\" start: 0 count: 10 direction: DOWNSTREAM orFilters: [ { and: [ { condition: EQUAL negated: false field: \\"degree\\" values: [\\"1\\", \\"2\\", \\"3+\\"] } ] } ] } ) { searchResults { degree entity { urn type } } }}"\n}}\'\n'))),(0,a.yg)(i.A,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'# Inlined from /metadata-ingestion/examples/library/read_lineage_rest.py\n# read-modify-write requires access to the DataHubGraph (RestEmitter is not enough)\nfrom datahub.ingestion.graph.client import DatahubClientConfig, DataHubGraph\n\ngms_endpoint = "http://localhost:8080"\ngraph = DataHubGraph(DatahubClientConfig(server=gms_endpoint))\n\n# Query multiple aspects from entity\nquery = """\nquery searchAcrossLineage {\n  searchAcrossLineage(\n    input: {\n      query: "*"\n      urn: "urn:li:dataset:(urn:li:dataPlatform:dbt,long_tail_companions.adoption.human_profiles,PROD)"\n      start: 0\n      count: 10\n      direction: DOWNSTREAM\n      orFilters: [\n        {\n          and: [\n            {\n              condition: EQUAL\n              negated: false\n              field: "degree"\n              values: ["1", "2", "3+"]\n            }\n          ]                                     # Additional search filters can be included here as well\n        }\n      ]\n    }\n  ) {\n    searchResults {\n      degree\n      entity {\n        urn\n        type\n      }\n    }\n  }\n}\n"""\nresult = graph.execute_graphql(query=query)\n\nprint(result)\n\n')))),(0,a.yg)("p",null,"This will perform a multi-hop lineage search on the urn specified. For more information about the ",(0,a.yg)("inlineCode",{parentName:"p"},"searchAcrossLineage")," mutation, please refer to ",(0,a.yg)("a",{parentName:"p",href:"/docs/graphql/queries/#searchacrosslineage"},"searchAcrossLineage"),"."))}f.isMDXComponent=!0}}]);